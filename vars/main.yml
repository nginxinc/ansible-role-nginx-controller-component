---
## All the below variables are REQUIRED

# controller:
#   fqdn:  # FQDN of the NGINX Controller instance
#   auth_token:  Authentication token for NGINX Controller
# environmentName:  # Environment the component is associated with
# appName:  # Name of the app

## Structure for component details:
## * Omit settings that are empty / not used.
## * Use {} for URIS if not providing optional behavior settings. i.e. "http://example.com": {}

# component:
#   metadata:
#     name:  # REQUIRED: name of the component
#     displayName:  # Friendly display name
#     description:  # Complete sentence description
#     tags:
#       - tag1
#       - tag2
#   desiredState:
#     ingress:
#       uris:
#         "/":  # One URI for the component of the service relative to the gateway (i.e. '/' or '/wiki')
#           matchMethod: PREFIX  # OPTIONAL: PREFIX | REGEX | REGEX_CASE_SENSITIVE | SUFFIX | EXACT
#           tls:  # OPTIONAL: per URI certificate if multiple URIs in the Component
#             certRef:
#               ref: ""
#             protocols:  # Applies to this URI array: TLSv1 | TLSv1.1 | TLSv1.2 | TLSv1.3 | SSLv2 | SSLv3
#             cipher: string
#             preferServiceCipherServiceConfigState: # ENABLED | DISABLED
#             sessionCache: # OFF | NONE | BUILTIN | SHARED
#       methods:  # OPTIONAL: POST | GET | PUT | DELETE | PATCH | HEAD | TRACE | OPTIONS | CONNECT
#         - POST
#         - GET
#         - PUT
#       headers:  # OPTIONAL (Applies to all URIs)
#         - name: string
#           nameMatchMethod:  # PREFIX | REGEX | REGEX_CASE_SENSITIVE | SUFFIX | EXACT
#         - value: string
#           valueMatchMethod:  # PREFIX | REGEX  | REGEX_CASE_SENSITIVE | SUFFIX | EXACT
#       http2:  # OPTIONAL (Applies to all URIs): ENABLED | DISABLED
#       spdy:  # OPTIONAL (Applies to all URIs): ENABLED | DISABLED
#       proxyProtocol:  # OPTIONAL (Applies to all URIs): ENABLED | DISABLED
#       setFib:  # OPTIONAL (Applies to all URIs): int
#       fastOpen:  # OPTIONAL (Applies to all URIs): int
#       backlog:  # OPTIONAL (Applies to all URIs): int
#       receiveBufferSize:  # OPTIONAL (Applies to all URIs): string
#       sendBufferSize:  # OPTIONAL (Applies to all URIs): string
#       acceptFilter:  # OPTIONAL (Applies to all URIs): DATA_READY | HTTP_READY
#       deferred:  # OPTIONAL (Applies to all URIs): ENABLED | DISABLED
#       isIpv6Only:  # OPTIONAL (Applies to all URIs): bool
#       reusePort:  # OPTIONAL (Applies to all URIs): ENABLED | DISABLED
#       tls:  # OPTIONAL (Applies to all URIs)
#         certRef:
#           ref: ""
#         protocols:  # Array: TLSv1 | TLSv1.1 | TLSv1.2 | TLSv1.3 | SSLv2 | SSLv3
#           - TLSv1.3
#         cipher: string
#         preferServiceCipherServiceConfigState: # ENABLED | DISABLED
#         sessionCache:  # OFF | NONE | BUILTIN | SHARED
#       notFoundStatusCode:  # OPTIONAL (Code to return when resource is not found): int (i.e. 404)
#       gatewayRefs:  # REQUIRED
#         - ref: ""
#       tcpKeepAlive:  # OPTIONAL
#         idle: string
#         interval: string
#         count: 0
#     backend:
#       workloadGroups:  # Array, one REQUIRED
#         "workload-group-1":
#           locationRefs:
#             - ref: ""
#           uris:
#             "http://10.0.0.1:6666":  # Use {} if none of the below options are provided
#               weight: 1
#               maxConns: 0
#               maxFails: 1
#               failTimeout: 10s
#               isBackup: false
#               isDown: false
#               resolve: DISABLED
#               route: string
#               service: string
#               slowStart: 0
#               isDrain: false
#           loadBalancingMethod:
#             type:  # ROUND_ROBIN | IPHASH | LEAST_CONNECTIONS | HASH | LEAST_TIME | RANDOM
#               userKey:  # If HASH
#               consistentHash:  # ENABLED | DISABLED
#           sessionPersistence:  # One of
#             COOKIE:
#               srvID: string
#               expireTime: string
#               domain: string
#               path: string
#             ROUTE:  # COOKIE | URI | BOTH
#             COOKIE_LEARN:
#               create: string
#               lookup: string
#           serviceDiscovery:
#             dnsResolver:
#               uris: string  # Array
#               ttl: string
#               failTimeout: string
#       monitoring:
#         defaultState: HEALTHY
#         interval: 5
#         timeout: 1
#         consecutiveSuccessThreshold: 1
#         consecutiveFailureThreshold: 1
#         port: 443
#         uri: "/"
#         response:
#           status:
#             range:
#               startCode: 100
#               endCode: 599
#             codes:  # Array of individual codes from 100 to 599
#             match: true
#           headers:
#             content: string
#             match: true
#           body:
#             content: string
#             match: true
#       preserveHostHeader: DISABLED
#       keepAlive:
#         connections: 0
#         requestsPerConn: 0
#         idleTimeout: 1h
#       queue:
#         lenght: 0
#         timeOut: 1h
#       httpVersion: string
#       ntlmAuthentication: DISABLED
#       persistentState: string
#     programmability:
#       uriRewrites:  # Array
#         - incomingPattern: string
#           rewritePattern: string
#       httpHttpsRedirect: DISABLED
#       uriRedirects:  # Array
#         - incomingPattern: string
#           rewritePattern: string
#           responseCode: 0
#       cookieModifications:  # Array
#         - action:  # ADD | MODIFY | DELETE
#           cookieName: string
#           cookieValue: string
#       requestHeaderModifications:  # Array
#         - action: ADD
#           headerName: string
#           headerValue: string
#         - action: MODIFY
#           headerName: string
#           incomingValuePattern: regex
#           rewriteValuePattern: regex
#         - action: DELETE
#           headerName: string
#           incomingValuePattern: regex
#       responseHeaderModifications:  # Array
#         - action: ADD
#           headerName: string
#           headerValue: string
#         - action: MODIFY
#           headerName: string
#           incomingValuePattern: regex
#           rewriteValuePattern: regex
#         - action: DELETE
#           headerName: string
#           incomingValuePattern: regex
#     logging:
#       errorLog: DISABLED
#       accessLog:
#         state: DISABLED
#         format: string
#     security:
#       strategyRef:
#         ref: ""
#       waf:
#         isEnabled: true
#         isMonitorOnly: true
#         signatureOverrides:
#           action: IGNORE
#         technologyStack:  # Array of known stacks i.e.: [ ANGULAR_JS", "JAVASCRIPT", "LINUX", "MYSQL", "PYTHON" ]
#       identityProviderRefs:
#         - ref: ""
#       apiKeyClientAuth:
#         keyLocation:  # HEADER | QUERY_PARAM
#         key: string
#       jwtClientAuth:
#         keyLocation:  # BEARER | HEADER | QUERY_PARAM | COOKIE
#         key: string
#       conditionalAuth:
#         sourceType:  # HEADER | JWT_CLAIM
#         sourceKey: string
#         comparisonType:  # EQUALS | NOT_EQUALS | IN | CONTAINS
#         comparisonValues: string
#         action:  # ALLOW | DENY
#         denyStatusCode: 404
#       rateLimit:
#         rate: 1
#         rateMeasure:  # SECONDS | MINUTES
#         burst: 0
#         delay: 0
#         statusCode: 429
#         key: string
#       interceptWorkloadErrors: DISABLED
#     publishedApiRefs:
#       - ref: ""
