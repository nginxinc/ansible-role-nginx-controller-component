---
- name: Fail if required variables are not defined
  assert:
    that: ("{{ item }} is defined") and ("{{ item }} | length > 0")
  loop:
    - controller.fqdn
    - controller.auth_token
    - environmentName
    - appName
    - component.metadata.name

- name: Form the component url
  set_fact:
    component_url: >-
      https://{{ controller.fqdn }}/{{ api_version }}/services/environments/{{ environmentName }}/apps/{{ appName }}/components/{{ component.metadata.name }}

- name: Upsert component (create if absent, change if present)
  uri:
    url: "{{ component_url }}"
    method: "PUT"
    body: "{{ component }}"
    body_format: json
    status_code:
      - 200
      - 201
    return_content: yes
    validate_certs: "{{ controller.validate_certs | default(false) }}"
    headers:
      Cookie: "{{ controller.auth_token }}"
  register: component_status

- name: Show component status
  debug:
    msg: "{{ component_status }}"

- name: Pause while system initiates changes
  pause:
    seconds: "2"

- name: Confirm component is provisioned and not errored
  uri:
    url: "{{ component_url }}"
    method: "GET"
    body_format: json
    status_code:
      - 200
    return_content: yes
    validate_certs: "{{ controller.validate_certs | default(false) }}"
    headers:
      Cookie: "{{ controller.auth_token }}"
  register: component_current_status
  until: (component_current_status is defined) and
         (not component_current_status.json.currentStatus.state.selfConfigState.isConfiguring | bool)
  retries: 50
  delay: 2
  failed_when: component_current_status.json.currentStatus.state.selfConfigState.isError | bool

- name: Show component details
  debug:
    msg: "{{ component_current_status }}"
